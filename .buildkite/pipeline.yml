steps:

  - group: Build
    steps:
      - name: ":docker:"
        agents:
          queue: elastic-builders
        plugins:
          docker-compose#v3.1.0:
            build: site
            image-repository: buildkiteci/site
            image-name: "site-build-${BUILDKITE_BUILD_NUMBER}-dev"

      - name: ":docker::zap:"
        agents:
          queue: elastic-builders
        plugins:
          docker-compose#v3.1.0:
            config: docker-compose.prod.yml
            build: site
            image-repository: buildkiteci/site
            image-name: "site-build-${BUILDKITE_BUILD_NUMBER}-prod"

      - name: ":docker::chrome:"
        agents:
          queue: elastic-builders
        plugins:
          docker-compose#v3.1.0:
            config: docker-compose.integration-tests.yml
            build: integration-tests
            image-repository: buildkiteci/site
            image-name: "site-build-${BUILDKITE_BUILD_NUMBER}-integration-tests"

  - wait

  - group: Tests
    steps:
      - label: ":pipeline::closed_lock_with_key:"
        command: "buildkite-agent pipeline upload .buildkite/pipeline.security.yml"

      - name: ":eslint:"
        command: yarn run lint
        plugins:
          docker-compose#v3.1.0:
            run: site

      - name: ":flowtype:"
        command: yarn run flow
        plugins:
          docker-compose#v3.1.0:
            run: site
        skip: "TODO"

      - name: ":package::mag:"
        command: yarn run bundle-analyze
        artifact_paths: "bundle-analysis/*"
        plugins:
          docker-compose#v3.1.0:
            run: site

      - name: ":chrome:"
        command: yarn run integration
        artifact_paths: "integration-tests/screenshots/*.png"
        timeout_in_minutes: 3
        plugins:
          docker-compose#v3.1.0:
            run: integration-tests
            config: docker-compose.integration-tests.prod-image.yml

      - name: ":percy:"
        command: yarn run percy
        timeout_in_minutes: 3
        plugins:
          docker-compose#v3.1.0:
            run: integration-tests
            config: docker-compose.integration-tests.prod-image.yml

  - wait

  - group: Deploy
    steps:
      - label: ":docker::package:"
        branches: master
        plugins:
          ecr#v2.0.0:
            login: true
            account-ids: ${ECR_ACCOUNT_ID}
          docker-compose#v3.1.0:
            config: docker-compose.prod.yml
            push:
              - "site:${ECR_REPOSITORY}:${BUILDKITE_BUILD_NUMBER}"

  - wait

  - group: Deploy
    steps:
      - label: ":docker::rocket:"
        branches: master
        concurrency: 1
        concurrency_group: site-deploy
        agents:
          queue: deploy
        # plugins:
        #   ecs-deploy#v1.2.0:
        #     cluster: buildkite-ecs
        #     service: site
        #     task-definition: ecs-task.json
        #     task-family: buildkite-site
        #     image: "${ECR_REPOSITORY}:${BUILDKITE_BUILD_NUMBER}"
        command: scripts/deploy-ecs

  - wait
      
  - group: Deploy
    steps:
      - label: ":partyparrot:"
        branches: master
        command: "buildkite-agent annotate --style success ':partyparrot: Deployed to https://buildkite.com/'"

  - wait

  - group: Production Tests
    steps:
      - name: ":chrome::zap:"
        command: "yarn run integration:production"
        branches: master
        timeout_in_minutes: 3
        plugins:
          docker-compose#v3.1.0:
            run: integration-tests
            config: docker-compose.integration-tests.prod-site.yml
        artifact_paths: "integration-tests/screenshots/*.png"
